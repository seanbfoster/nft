[{"/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/index.js":"1","/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/App.js":"2","/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/reportWebVitals.js":"3","/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/util/interact.js":"4","/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/util/dapp.js":"5","/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/Components/Minter.js":"6","/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/Components/Header.js":"7","/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/Components/Team.js":"8","/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/Components/Roadmap.js":"9","/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/Components/About.js":"10","/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/Components/Home.js":"11"},{"size":476,"mtime":1644550789256,"results":"12","hashOfConfig":"13"},{"size":989,"mtime":1644940412430,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1644256404405,"results":"15","hashOfConfig":"13"},{"size":2784,"mtime":1644354787172,"results":"16","hashOfConfig":"13"},{"size":2418,"mtime":1644557236324,"results":"17","hashOfConfig":"13"},{"size":1495,"mtime":1644539205903,"results":"18","hashOfConfig":"13"},{"size":3274,"mtime":1644948833952,"results":"19","hashOfConfig":"13"},{"size":144,"mtime":1644536555681,"results":"20","hashOfConfig":"13"},{"size":158,"mtime":1644557242110,"results":"21","hashOfConfig":"13"},{"size":149,"mtime":1644557242110,"results":"22","hashOfConfig":"13"},{"size":1557,"mtime":1644804781050,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"c63qsf",{"filePath":"27","messages":"28","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/index.js",[],["52","53"],"/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/App.js",["54","55","56","57","58","59","60","61"],"import './App.css';\n\nimport Header from './Components/Header'\nimport Minter from './Components/Minter'\nimport About from './Components/About'\nimport Roadmap from './Components/Roadmap'\nimport Team from './Components/Team'\nimport Home from './Components/Home'\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes\n} from \"react-router-dom\";\n\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n\n  const [status, setStatus] = useState(\"\");\n  const [walletAddress, setWallet] = useState(\"\");\n  const [mintNum, setMintNum] = useState(1);\n\n  return (\n      <div className=\"App\">\n        <Header></Header>\n        <div className=\"thing\"></div>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/mint\" element={<Minter />} />\n          <Route path=\"/about\" element={<About />}/>\n          <Route path=\"/roadmap\" element={<Roadmap />}/>\n          <Route path=\"/team\" element={<Team />}/>\n        </Routes>\n      </div>\n  );\n}\n\nexport default App;\n","/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/reportWebVitals.js",[],["62","63"],"/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/util/interact.js",["64"],"/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/util/dapp.js",[],"/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/Components/Minter.js",["65","66","67","68","69","70"],"import { useEffect, useState } from \"react\";\nimport {\n  connectWallet,\n  getCurrentWallet,\n  mintNFT\n} from \"../util/dapp.js\";\n\nimport hero from \"../util/hero.jpg\"\n\nconst Minter = (props) => {\n  const [status, setStatus] = useState(\"\");\n  const [walletAddress, setWallet] = useState(\"\");\n  const [mintNum, setMintNum] = useState(1);\n\n  function changeNumTokens(n) {\n    if((mintNum + n >= 1) && (mintNum + n <= 10)){\n      setMintNum(mintNum + n)\n    }\n  }\n\n  const onMintPressed = async (numTokens) => {\n    const addressArray = await window.ethereum.request({method: 'eth_accounts'});\n\n    if(addressArray.length > 0){\n      const mintRepsonse = await mintNFT(numTokens);\n      setStatus(JSON.stringify(mintRepsonse));\n    }\n    else{\n      setStatus(\"Please connect your wallet.\")\n    }\n  };\n\n  return (\n      <div className=\"Minter\">\n        <div className=\"minthero\">\n          <img src={hero} alt=\"hero image\"/>\n        </div>\n        <div className=\"mint\">\n          <h1 id=\"numberOfTokens\">\n            {mintNum}\n          </h1>\n          <button id=\"addNumToken\" onClick = {() => changeNumTokens(1)}>\n            +\n          </button>\n          <button id=\"minusNumToken\" onClick = {() => changeNumTokens(-1)}>\n            -\n          </button>\n          <button id=\"mintButton\" onClick = {() => onMintPressed(mintNum)}>\n            Mint NFT\n          </button>\n          <h2 id=\"status\">\n            {status}\n          </h2>\n        </div>\n      </div>\n  );\n};\n\nexport default Minter;\n","/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/Components/Header.js",["71","72","73","74","75","76","77"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  connectWallet,\n  getCurrentWallet,\n  mintNFT\n} from \"../util/dapp.js\";\n\nimport twitter from \"../util/twitter-brands.svg\";\nimport discord from \"../util/discord-brands.svg\";\nimport opensea from \"../util/opensea.svg\"\nimport bars from \"../util/bars-solid.svg\"\n\nconst Header = (props) => {\n  const [status, setStatus] = useState(\"\");\n  const [walletAddress, setWallet] = useState(\"\");\n  const [mintNum, setMintNum] = useState(1);\n  const [showLinks, setShowLinks] = useState(true)\n\n  useEffect(async () => {\n    const { status, address } = await getCurrentWallet();\n    setStatus(status);\n    setWallet(address);\n    addWalletListener();\n  }, []);\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"Wallet Connected\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"Connect using Metamask\");\n        }\n      });\n    } else {\n      setStatus(\"Install Metamask\");\n    }\n  }\n\n  const connectWalletPressed = async () => {\n      const walletResponse = await connectWallet();\n      setStatus(walletResponse.status);\n      setWallet(walletResponse.address);\n  };\n  \n  const linkStyle = {\n    \"text-decoration\": \"none\"\n  }\n\n  function toggleMobileMenu() {\n    setShowLinks(!showLinks);\n  }\n\n  return(\n    <div className=\"Header-container\">\n      <div className=\"Header\">\n        <div className=\"header-left\">\n          {/* <Link style={linkStyle} to=\"/\"><h1>Cosmic Darlings</h1></Link> */}\n          <Link style={linkStyle} to=\"/about\"><h2>About</h2></Link>\n          <Link style={linkStyle} to=\"/roadmap\"><h2>Roadmap</h2></Link>\n          <Link style={linkStyle} to=\"/team\"><h2>Team</h2></Link>\n        </div>\n        <div className=\"mobile-menu\" id={showLinks ? \"hidden\" : \"\"}>\n          <div className=\"menu-links\">\n            {/* <Link style={linkStyle} to=\"/\"><h1>Cosmic Darlings</h1></Link> */}\n            <Link style={linkStyle} to=\"/about\"><h2>About</h2></Link>\n            <Link style={linkStyle} to=\"/roadmap\"><h2>Roadmap</h2></Link>\n            <Link style={linkStyle} to=\"/team\"><h2>Team</h2></Link>\n            <button id=\"close-menu\" onClick={toggleMobileMenu}>X</button>\n          </div>\n        </div>\n        <a id=\"mobile-toggle\" onClick={toggleMobileMenu}><img src={bars} alt=\"Kiwi standing on oval\"/></a>\n        <div className=\"header-right\">\n          {/* <a href=\"https://www.opensea.io\"><img src={opensea} alt=\"Kiwi standing on oval\"/></a> */}\n          <a href=\"https://www.twitter.com\"><img src={twitter} alt=\"Kiwi standing on oval\"/></a>\n          <a href=\"https://www.discord.com\"><img src={discord} alt=\"Kiwi standing on oval\"/></a>\n          <button id=\"walletButton\" onClick={connectWalletPressed}>\n            {walletAddress.length > 0 ? (\n              \"Connected: \" +\n              String(walletAddress).substring(0, 6) +\n              \"...\" +\n              String(walletAddress).substring(38)\n              ) : (\n              \"Connect Wallet\"\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n    )\n}\n\nexport default Header;","/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/Components/Team.js",[],"/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/Components/Roadmap.js",[],"/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/Components/About.js",[],"/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/Components/Home.js",["78","79","80","81","82"],"import hero from \"../util/hero.jpg\"\nimport vid from \"../util/headache.mp4\"\nimport vidStars from \"../util/stars.mp4\"\nimport deez from \"../util/deez.mp4\"\nimport { Link } from \"react-router-dom\";\n\nconst Home = (props) => {\n\n  const linkStyle = {\n    \"text-decoration\": \"none\"\n  }\n\n  return (\n    <>\n    <video autoPlay muted loop playsInline id=\"bg-vid\">\n      <source src={deez} type=\"video/mp4\"/>\n    </video>\n    \n    <div className=\"Home-container\">\n      <div className=\"Home\">\n        <div className=\"Home-left\">\n          <img src={hero} alt=\"hero image\"/>\n        </div>\n        <div className=\"Home-right\">\n          <h2>Cosmic Darlings</h2>\n          <p>Cosmic Darlings are a carefully curated collection of 10,000 cyborgs on the Ethereum blockchain. Each Darling is unique and consists of both hand-drawn and real world traits.</p>\n          <h3 id=\"two\">/ Galaxies</h3>\n          <p>In this genesis launch, all darlings are spawned from the void and deployed to the Milky Way. Owners can chose to stay in their galaxy or burn their darling to teleport to another galaxy.</p>\n          <h3 id=\"two\">/ Gateway</h3>\n          <p>Darlings gain exclusive access to all future @Lurch projects. Lurch is a collective of 1 artist and 1 developer. </p>\n          <h3 id=\"two\">/ Mint & Whitelist</h3>\n          <p id=\"last\">The mint date has not been announced. Join us on Discord & follow us on Twitter to stay up to date. Whitelist spots will be distributed on both mediums.</p>\n        </div>\n      </div>\n    </div>\n    </>\n  );\n};\n\nexport default Home;\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":11,"column":20,"nodeType":"89","messageId":"90","endLine":11,"endColumn":26},{"ruleId":"87","severity":1,"message":"91","line":16,"column":10,"nodeType":"89","messageId":"90","endLine":16,"endColumn":19},{"ruleId":"87","severity":1,"message":"92","line":20,"column":10,"nodeType":"89","messageId":"90","endLine":20,"endColumn":16},{"ruleId":"87","severity":1,"message":"93","line":20,"column":18,"nodeType":"89","messageId":"90","endLine":20,"endColumn":27},{"ruleId":"87","severity":1,"message":"94","line":21,"column":10,"nodeType":"89","messageId":"90","endLine":21,"endColumn":23},{"ruleId":"87","severity":1,"message":"95","line":21,"column":25,"nodeType":"89","messageId":"90","endLine":21,"endColumn":34},{"ruleId":"87","severity":1,"message":"96","line":22,"column":10,"nodeType":"89","messageId":"90","endLine":22,"endColumn":17},{"ruleId":"87","severity":1,"message":"97","line":22,"column":19,"nodeType":"89","messageId":"90","endLine":22,"endColumn":29},{"ruleId":"83","replacedBy":"98"},{"ruleId":"85","replacedBy":"99"},{"ruleId":null,"fatal":true,"severity":2,"message":"100","line":12,"column":18},{"ruleId":"87","severity":1,"message":"91","line":1,"column":10,"nodeType":"89","messageId":"90","endLine":1,"endColumn":19},{"ruleId":"87","severity":1,"message":"101","line":3,"column":3,"nodeType":"89","messageId":"90","endLine":3,"endColumn":16},{"ruleId":"87","severity":1,"message":"102","line":4,"column":3,"nodeType":"89","messageId":"90","endLine":4,"endColumn":19},{"ruleId":"87","severity":1,"message":"94","line":12,"column":10,"nodeType":"89","messageId":"90","endLine":12,"endColumn":23},{"ruleId":"87","severity":1,"message":"95","line":12,"column":25,"nodeType":"89","messageId":"90","endLine":12,"endColumn":34},{"ruleId":"103","severity":1,"message":"104","line":36,"column":11,"nodeType":"105","endLine":36,"endColumn":45},{"ruleId":"87","severity":1,"message":"106","line":8,"column":3,"nodeType":"89","messageId":"90","endLine":8,"endColumn":10},{"ruleId":"87","severity":1,"message":"107","line":13,"column":8,"nodeType":"89","messageId":"90","endLine":13,"endColumn":15},{"ruleId":"87","severity":1,"message":"92","line":17,"column":10,"nodeType":"89","messageId":"90","endLine":17,"endColumn":16},{"ruleId":"87","severity":1,"message":"96","line":19,"column":10,"nodeType":"89","messageId":"90","endLine":19,"endColumn":17},{"ruleId":"87","severity":1,"message":"97","line":19,"column":19,"nodeType":"89","messageId":"90","endLine":19,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":22,"column":13,"nodeType":"110","endLine":27,"endColumn":4},{"ruleId":"111","severity":1,"message":"112","line":77,"column":9,"nodeType":"105","endLine":77,"endColumn":58},{"ruleId":"87","severity":1,"message":"113","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":11},{"ruleId":"87","severity":1,"message":"114","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":16},{"ruleId":"87","severity":1,"message":"115","line":5,"column":10,"nodeType":"89","messageId":"90","endLine":5,"endColumn":14},{"ruleId":"87","severity":1,"message":"116","line":9,"column":9,"nodeType":"89","messageId":"90","endLine":9,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":22,"column":11,"nodeType":"105","endLine":22,"endColumn":45},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'walletAddress' is assigned a value but never used.","'setWallet' is assigned a value but never used.","'mintNum' is assigned a value but never used.","'setMintNum' is assigned a value but never used.",["117"],["118"],"Parsing error: Unexpected reserved word 'await'\n\n\u001b[0m \u001b[90m 10 |\u001b[39m \u001b[36mimport\u001b[39m detectEthereumProvider \u001b[36mfrom\u001b[39m \u001b[32m'@metamask/detect-provider'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 12 |\u001b[39m \u001b[36mconst\u001b[39m provider \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m detectEthereumProvider()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m connectWallet \u001b[33m=\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m","'connectWallet' is defined but never used.","'getCurrentWallet' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'mintNFT' is defined but never used.","'opensea' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'vid' is defined but never used.","'vidStars' is defined but never used.","'Link' is defined but never used.","'linkStyle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]