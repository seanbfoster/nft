{"ast":null,"code":"import Web3 from \"web3\";\nconst web3 = new Web3(Web3.givenProvider);\nexport const connectWallet = async () => {\n  if (window.ethereum) {\n    try {\n      var wallet = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      return {\n        status: \"wallet connected\",\n        address: wallet\n      };\n    } catch (err) {\n      alert(\"in here\");\n      return {\n        status: err.message,\n        address: \"\"\n      };\n    }\n  } else {\n    alert(\"Metamask not detechted!\");\n    return {\n      status: \"metamask not detected\",\n      address: \"\"\n    };\n  }\n};","map":{"version":3,"sources":["/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/util/dapp.js"],"names":["Web3","web3","givenProvider","connectWallet","window","ethereum","wallet","request","method","status","address","err","alert","message"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,MAAMC,IAAI,GAAG,IAAID,IAAJ,CAASA,IAAI,CAACE,aAAd,CAAb;AAEA,OAAO,MAAMC,aAAa,GAAG,YAAY;AAErC,MAAIC,MAAM,CAACC,QAAX,EAAqB;AACjB,QAAI;AACA,UAAIC,MAAM,GAAG,MAAMF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAxB,CAAnB;AACA,aAAO;AACHC,QAAAA,MAAM,EAAE,kBADL;AAEHC,QAAAA,OAAO,EAAEJ;AAFN,OAAP;AAIH,KAND,CAOA,OAAOK,GAAP,EAAY;AACRC,MAAAA,KAAK,CAAC,SAAD,CAAL;AACA,aAAO;AACHH,QAAAA,MAAM,EAAEE,GAAG,CAACE,OADT;AAEHH,QAAAA,OAAO,EAAE;AAFN,OAAP;AAIH;AACJ,GAfD,MAiBK;AACDE,IAAAA,KAAK,CAAC,yBAAD,CAAL;AACA,WAAO;AACHH,MAAAA,MAAM,EAAE,uBADL;AAEHC,MAAAA,OAAO,EAAE;AAFN,KAAP;AAIH;AACJ,CA1BM","sourcesContent":["import Web3 from \"web3\";\n\nconst web3 = new Web3(Web3.givenProvider)\n\nexport const connectWallet = async () => {\n    \n    if (window.ethereum) {\n        try {\n            var wallet = await window.ethereum.request({method: 'eth_requestAccounts'});\n            return {\n                status: \"wallet connected\",\n                address: wallet\n            }\n        }\n        catch (err) {\n            alert(\"in here\")\n            return {\n                status: err.message,\n                address: \"\"\n            }\n        }\n    }\n\n    else {\n        alert(\"Metamask not detechted!\")\n        return {\n            status: \"metamask not detected\",\n            address: \"\"\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}