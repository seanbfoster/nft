{"ast":null,"code":"var _jsxFileName = \"/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/Minter.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { connectWallet, getCurrentWalletConnected, mintNFT } from \"./util/interact.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Minter = props => {\n  _s();\n\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [url, setURL] = useState(\"\");\n  useEffect(async () => {\n    const {\n      address,\n      status\n    } = await getCurrentWalletConnected();\n    setWallet(address);\n    setStatus(status);\n    addWalletListener();\n  }, []);\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"👆🏽 Write a message in the text-field above.\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus(\"Install Metamask\");\n    }\n  }\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  const onMintPressed = async () => {\n    alert(\"HELLO1\");\n    const {\n      success,\n      status\n    } = await mintNFT(1);\n    setStatus(status);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Minter\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"walletButton\",\n      onClick: connectWalletPressed,\n      children: walletAddress.length > 0 ? \"Connected: \" + String(walletAddress).substring(0, 6) + \"...\" + String(walletAddress).substring(38) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"mintButton\",\n      onClick: onMintPressed,\n      children: \"Mint NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Minter, \"cR6Zg2tMfWDzW04DeJ65de+yY4M=\");\n\n_c = Minter;\nexport default Minter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Minter\");","map":{"version":3,"sources":["/Users/seanfoster/Documents/nft-minter-tutorial/nft-minter/src/Minter.js"],"names":["useEffect","useState","connectWallet","getCurrentWalletConnected","mintNFT","Minter","props","walletAddress","setWallet","status","setStatus","name","setName","description","setDescription","url","setURL","address","addWalletListener","window","ethereum","on","accounts","length","connectWalletPressed","walletResponse","onMintPressed","alert","success","String","substring"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SACEC,aADF,EAEEC,yBAFF,EAGEC,OAHF,QAIO,oBAJP;;;AAMA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,aAAD,EAAgBC,SAAhB,IAA6BP,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,EAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAM;AAAEiB,MAAAA,OAAF;AAAWR,MAAAA;AAAX,QAAsB,MAAMN,yBAAyB,EAA3D;AAEAK,IAAAA,SAAS,CAACS,OAAD,CAAT;AACAP,IAAAA,SAAS,CAACD,MAAD,CAAT;AAEAS,IAAAA,iBAAiB;AAClB,GAPQ,EAON,EAPM,CAAT;;AASA,WAASA,iBAAT,GAA6B;AAC3B,QAAIC,MAAM,CAACC,QAAX,EAAqB;AACnBD,MAAAA,MAAM,CAACC,QAAP,CAAgBC,EAAhB,CAAmB,iBAAnB,EAAuCC,QAAD,IAAc;AAClD,YAAIA,QAAQ,CAACC,MAAT,GAAkB,CAAtB,EAAyB;AACvBf,UAAAA,SAAS,CAACc,QAAQ,CAAC,CAAD,CAAT,CAAT;AACAZ,UAAAA,SAAS,CAAC,+CAAD,CAAT;AACD,SAHD,MAGO;AACLF,UAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,UAAAA,SAAS,CAAC,oDAAD,CAAT;AACD;AACF,OARD;AASD,KAVD,MAUO;AACLA,MAAAA,SAAS,CAAC,kBAAD,CAAT;AACD;AACF;;AAED,QAAMc,oBAAoB,GAAG,YAAY;AACvC,UAAMC,cAAc,GAAG,MAAMvB,aAAa,EAA1C;AACAQ,IAAAA,SAAS,CAACe,cAAc,CAAChB,MAAhB,CAAT;AACAD,IAAAA,SAAS,CAACiB,cAAc,CAACR,OAAhB,CAAT;AACD,GAJD;;AAMA,QAAMS,aAAa,GAAG,YAAY;AAChCC,IAAAA,KAAK,CAAC,QAAD,CAAL;AACA,UAAM;AAAEC,MAAAA,OAAF;AAAWnB,MAAAA;AAAX,QAAsB,MAAML,OAAO,CAAC,CAAD,CAAzC;AACAM,IAAAA,SAAS,CAACD,MAAD,CAAT;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAQ,MAAA,EAAE,EAAC,cAAX;AAA0B,MAAA,OAAO,EAAEe,oBAAnC;AAAA,gBACGjB,aAAa,CAACgB,MAAd,GAAuB,CAAvB,GACC,gBACAM,MAAM,CAACtB,aAAD,CAAN,CAAsBuB,SAAtB,CAAgC,CAAhC,EAAmC,CAAnC,CADA,GAEA,KAFA,GAGAD,MAAM,CAACtB,aAAD,CAAN,CAAsBuB,SAAtB,CAAgC,EAAhC,CAJD,gBAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAQ,MAAA,EAAE,EAAC,YAAX;AAAwB,MAAA,OAAO,EAAEJ,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAhED;;GAAMrB,M;;KAAAA,M;AAkEN,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport {\n  connectWallet,\n  getCurrentWalletConnected,\n  mintNFT,\n} from \"./util/interact.js\";\n\nconst Minter = (props) => {\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [url, setURL] = useState(\"\");\n\n  useEffect(async () => {\n    const { address, status } = await getCurrentWalletConnected();\n\n    setWallet(address);\n    setStatus(status);\n\n    addWalletListener();\n  }, []);\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"👆🏽 Write a message in the text-field above.\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus(\"Install Metamask\");\n    }\n  }\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  const onMintPressed = async () => {\n    alert(\"HELLO1\")\n    const { success, status } = await mintNFT(1);\n    setStatus(status);\n  };\n\n  return (\n    <div className=\"Minter\">\n      <button id=\"walletButton\" onClick={connectWalletPressed}>\n        {walletAddress.length > 0 ? (\n          \"Connected: \" +\n          String(walletAddress).substring(0, 6) +\n          \"...\" +\n          String(walletAddress).substring(38)\n          ) : (\n          <span>Connect Wallet</span>\n        )}\n      </button>\n      \n      <button id=\"mintButton\" onClick={onMintPressed}>\n        Mint NFT\n      </button>\n      \n    </div>\n  );\n};\n\nexport default Minter;\n"]},"metadata":{},"sourceType":"module"}